{"version":3,"sources":["components/Section/Section.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/MainContainer/MainContainer.module.scss","components/PageHeader/PageHeader.module.scss","components/ContactList/ContactListElement/ContactListElement.module.scss","components/Filter/Filter.module.scss","components/MainContainer/MainContainer.js","components/PageHeader/PageHeader.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","MainContainer","className","styles","this","props","children","Component","defaultProps","PageHeader","title","Section","Section__Title","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","whenSubmit","formReset","onSubmit","type","pattern","required","onChange","ContactForm__Button","ContactListElement","ContactListElement__Button","onClick","whenDelete","ContactList","filteredContacts","currentState","contacts","filter","contact","toLowerCase","includes","map","id","ContactList__Item","Filter","filterValue","whenChange","App","some","alert","prevState","uuidv4","idToDelete","contactsData","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad13fb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3808w\",\"Section__Title\":\"Section_Section__Title__3UV01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1VlKx\",\"ContactForm__Button\":\"ContactForm_ContactForm__Button__2OFHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3_pEm\",\"ContactList__Item\":\"ContactList_ContactList__Item__2x_IZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__5t6ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageHeader\":\"PageHeader_PageHeader__FjbAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListElement__Button\":\"ContactListElement_ContactListElement__Button__41jPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1_v_c\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nclass MainContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: <></>,\n  };\n\n  render() {\n    return <div className={styles.MainContainer}>{this.props.children}</div>;\n  }\n}\n\nexport default MainContainer;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './PageHeader.module.scss';\n\nclass PageHeader extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    title: 'Where is your title?',\n    children: <></>,\n  };\n\n  render() {\n    return <div className={styles.PageHeader}>{this.props.title}</div>;\n  }\n}\n\nexport default PageHeader;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    title: 'Where is your title?',\n    children: <></>,\n  };\n\n  render() {\n    return (\n      <>\n        <section className={styles.Section}>\n          <h2 className={styles.Section__Title}>{this.props.title}</h2>\n          {this.props.children}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Section;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    whenSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.whenSubmit(this.state);\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\n          <label>\n            {`Name: `}\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br />\n          <label>\n            {`Number: `}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br />\n          <button className={styles.ContactForm__Button} type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListElement.module.scss';\n\nclass ContactListElement extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    whenDelete: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.name}: {this.props.number}\n        <button\n          className={styles.ContactListElement__Button}\n          type=\"button\"\n          onClick={this.props.whenDelete}\n        >\n          Delete\n        </button>\n      </>\n    );\n  }\n}\n\nexport default ContactListElement;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListElement from './ContactListElement';\nimport styles from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  static propTypes = {\n    currentState: PropTypes.shape({\n      contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n      filter: PropTypes.string,\n    }).isRequired,\n    whenDelete: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const filteredContacts = this.props.currentState.contacts.filter(contact =>\n      contact.name\n        .toLowerCase()\n        .includes(this.props.currentState.filter.toLowerCase()),\n    );\n\n    return (\n      <>\n        <ul className={styles.ContactList}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <li className={styles.ContactList__Item} key={id}>\n              <ContactListElement\n                name={name}\n                number={number}\n                whenDelete={() => this.props.whenDelete(id)}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ContactList;\n","import { Component } from 'react';\nimport styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  static propTypes = {\n    filterValue: PropTypes.string.isRequired,\n    whenChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <>\n        <label>\n          {`Find by Name: `}\n          <input\n            className={styles.Filter}\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.props.filterValue}\n            onChange={this.props.whenChange}\n          />\n        </label>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport MainContainer from './components/MainContainer';\nimport PageHeader from './components/PageHeader';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n// import initialContacts from './utils/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    // contacts: initialContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsData = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsData) this.setState({ contacts: contactsData });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  whenSubmit = ({ name, number }) => {\n    if (this.state.contacts.some(contact => contact.name === name))\n      return alert(`${name} is already in contacts`);\n\n    this.setState(prevState => ({\n      contacts: [{ id: uuidv4(), name, number }, ...prevState.contacts],\n    }));\n  };\n\n  whenDelete = idToDelete => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== idToDelete),\n    }));\n  };\n\n  render() {\n    return (\n      <MainContainer>\n        <PageHeader title=\"React Homework 02. Phonebook\" />\n\n        <Section title=\"Add Contact\">\n          <ContactForm whenSubmit={this.whenSubmit} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            filterValue={this.state.filter}\n            whenChange={this.handleChange}\n          />\n          <br />\n          <ContactList currentState={this.state} whenDelete={this.whenDelete} />\n        </Section>\n      </MainContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}